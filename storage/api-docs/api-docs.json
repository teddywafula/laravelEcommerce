{
    "openapi": "3.0.0",
    "info": {
        "title": "Ecommerce APIs Documentation",
        "description": "Ecommerce mobile and Web Frontend APIs",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Ecommerce API Server"
        }
    ],
    "paths": {
        "/api/cart/add-to-cart": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Create user cart",
                "description": "Create user cart",
                "operationId": "addToCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "cart_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get user cart",
                "description": "Show user cart",
                "operationId": "getUserCart",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Create user cart",
                "description": "Create user cart",
                "operationId": "createCart",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/cart/{cart}/items": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Show cart items",
                "description": "Show cart items",
                "operationId": "getCartItems",
                "parameters": [
                    {
                        "name": "cart",
                        "in": "path",
                        "description": "Id of cart",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    }
                }
            }
        },
        "/api/cart/item/{cartItem}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove cart item",
                "description": "remove cart item",
                "operationId": "removeCartItem",
                "parameters": [
                    {
                        "name": "cartItem",
                        "in": "path",
                        "description": "Id of cart item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/category": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get List of Categories",
                "description": "Return List of Categories",
                "operationId": "getAllcategories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Store category in DB",
                "description": "Store category in DB",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fashion"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/category/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Show category",
                "description": "Show category",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Id of Category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "description": "Update category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Id of Category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fashion"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete Category",
                "description": "Delete Category",
                "operationId": "destroyCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Id of Category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/product": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get List of Products",
                "description": "Return List of Products",
                "operationId": "getAllProducts",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Store product in DB",
                "description": "Store product in DB",
                "operationId": "storeProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "category_id",
                                    "vendor_id",
                                    "price",
                                    "quantity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jacket"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "vendor_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "integer",
                                        "example": 10.23
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 100
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jacket description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/product/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Show product",
                "description": "Show product",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product",
                "description": "Update product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jacket"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "vendor_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "integer",
                                        "example": 10.23
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 100
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jacket description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete Products",
                "description": "Delete Products",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Id of Product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/vendor": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Get List of Vendors",
                "description": "Return List of Vendors",
                "operationId": "getAllVendors",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Store vendor in DB",
                "description": "Store vendor in DB",
                "operationId": "storeVendor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "company_name",
                                    "phone",
                                    "country",
                                    "location",
                                    "company_email",
                                    "user_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John"
                                    },
                                    "middle_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jack"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Doe "
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Company Y"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "+49 11111111"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Cameroon"
                                    },
                                    "location": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Address 123"
                                    },
                                    "company_email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aa@aa.aa"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/vendor/{vendor}": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Show vendor",
                "description": "Show vendor",
                "operationId": "getVendor",
                "parameters": [
                    {
                        "name": "vendor",
                        "in": "path",
                        "description": "Id of vendor",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    }
                }
            },
            "put": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Update vendor",
                "description": "Update vendor",
                "operationId": "updateVendor",
                "parameters": [
                    {
                        "name": "vendor",
                        "in": "path",
                        "description": "Id of vendor",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John"
                                    },
                                    "middle_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Jack"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Doe "
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Company Y"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "+49 11111111"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Cameroon"
                                    },
                                    "location": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Address 123"
                                    },
                                    "company_email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aa@aa.aa"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "format": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Delete Vendor",
                "description": "Delete Vendor",
                "operationId": "destroyVendor",
                "parameters": [
                    {
                        "name": "vendor",
                        "in": "path",
                        "description": "Id of Vendor",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        }
    }
}