<?php

namespace Tests\Feature\Repository;

use App\Models\Category;
use App\Repository\CategoryRepository;
use Database\Seeders\CategorySeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class CategoryRepositoryTest extends TestCase
{
    use RefreshDatabase;
    private CategoryRepository $categoryRepository;
    public function setUp(): void
    {
        $this->categoryRepository = new CategoryRepository();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_save(): void
    {
        $data = [
            'name' => 'test'
        ];
        $results = $this->categoryRepository->save($data);
        $this->assertDatabaseCount(Category::class, 1);
        $this->assertSame($data['name'], $results->name);
    }

    public function test_find_all(): void
    {
        $this->categoryRepository = new CategoryRepository();
        $this->seed(CategorySeeder::class);
        $this->assertDatabaseCount(Category::class, 5);
        $records = $this->categoryRepository->findAll();
        $this->assertCount(5, $records);
    }

    public function test_update(): void
    {
        $this->seed(CategorySeeder::class);
        $items = $this->categoryRepository->findAll();
        $item = $items[0];
        $data = [
          "name" => "update name"
        ];
        $results = $this->categoryRepository->update($data, $item);
        $this->assertSame($results->name, $data['name']);
    }
}
